<%
  for(var i=0;i < facts.length;i++) {
    const fact = facts[i];
%>
/**
* @dev change owner
*/
function <%= fact.head.functor.name %>(Tx transaction)
 internal
 pure
{

<%
  const inputs = fact.head.args[0];
  const tx = fact.head.args[1];
  const outputs = fact.head.args[2];
%>
  // inputs
<%
  if(inputs.type == 'list') {
    for(var j = 0;j < inputs.args.length;j++) {
%>
  // <%= inputs.args[j].value %>
  var <%= inputs.args[j].value %> = transaction.inputs[<%=j%>];
<%
    }
  }
%>
  // args
<%
  if(tx.type == 'list') {
    for(var j = 0;j < tx.args.length;j++) {
%>
  // <%= tx.args[j].value %>
  var <%= tx.args[j].value %> = transaction.args[<%=j%>];
<%
    }
  }
%>
  // outputs
<%
  if(outputs.type == 'list') {
    for(var j = 0;j < outputs.args.length;j++) {
%>
  // <%= outputs.args[j].value %>
  var <%= outputs.args[j].value %> = transaction.outputs[<%=j%>];
<%
    }
  }
%>
  // requires
<%
  for(var j = 0;j < fact.body.length;j++) {
%><%
  if(fact.body[j].functor.name == 'isAddress') {
  %>
  address <%= fact.body[j].args[0].value %> = RLP.toAddress(<%= fact.body[j].args[0].value %>)
  <%
  } else if(fact.body[j].functor.name == 'own') {
  %>
  require(<%= fact.body[j].args[1].value %>.owners[0] == <%= fact.body[j].args[0].value %>);
  <%
  }
  %>
<%
  }
%>
}

<% } %>
